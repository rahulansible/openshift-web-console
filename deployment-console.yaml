apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"openshift-web-console","webconsole":"true"},"name":"webconsole","namespace":"openshift-web-console"},"spec":{"replicas":1,"strategy":{"rollingUpdate":{"maxUnavailable":"100%"},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"openshift-web-console","webconsole":"true"},"name":"webconsole"},"spec":{"containers":[{"command":["/usr/bin/origin-web-console","--audit-log-path=-","-v=0","--config=/var/webconsole-config/webconsole-config.yaml"],"image":"docker.io/openshift/origin-web-console:v3.11","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/bin/sh","-c","if [[ ! -f /tmp/webconsole-config.hash ]]; then \\\n  md5sum /var/webconsole-config/webconsole-config.yaml \u003e /tmp/webconsole-config.hash; \\\nelif [[ $(md5sum /var/webconsole-config/webconsole-config.yaml) != $(cat /tmp/webconsole-config.hash) ]]; then \\\n  echo 'webconsole-config.yaml has changed.'; \\\n  exit 1; \\\nfi \u0026\u0026 NSS_SDB_USE_CACHE=no curl -k -f https://0.0.0.0:8443/console/"]}},"name":"webconsole","ports":[{"containerPort":8443}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8443,"scheme":"HTTPS"}},"resources":{"requests":{"cpu":"100m","memory":"100Mi"}},"volumeMounts":[{"mountPath":"/var/serving-cert","name":"serving-cert"},{"mountPath":"/var/webconsole-config","name":"webconsole-config"}]}],"nodeSelector":{"node-role.kubernetes.io/master":"true"},"serviceAccountName":"webconsole","volumes":[{"name":"serving-cert","secret":{"defaultMode":288,"secretName":"webconsole-serving-cert"}},{"configMap":{"defaultMode":288,"name":"webconsole-config"},"name":"webconsole-config"}]}}}}
  creationTimestamp: 2020-06-11T14:21:53Z
  generation: 1
  labels:
    app: openshift-web-console
    webconsole: "true"
  name: webconsole
  namespace: openshift-web-console
  resourceVersion: "46755"
  selfLink: /apis/extensions/v1beta1/namespaces/openshift-web-console/deployments/webconsole
  uid: e5c48f75-abee-11ea-86f8-0800273f7cc9
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: openshift-web-console
      webconsole: "true"
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: openshift-web-console
        webconsole: "true"
      name: webconsole
    spec:
      containers:
      - command:
        - /usr/bin/origin-web-console
        - --audit-log-path=-
        - -v=0
        - --config=/var/webconsole-config/webconsole-config.yaml
        image: docker.io/openshift/origin-web-console:v3.11
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |-
              if [[ ! -f /tmp/webconsole-config.hash ]]; then \
                md5sum /var/webconsole-config/webconsole-config.yaml > /tmp/webconsole-config.hash; \
              elif [[ $(md5sum /var/webconsole-config/webconsole-config.yaml) != $(cat /tmp/webconsole-config.hash) ]]; then \
                echo 'webconsole-config.yaml has changed.'; \
                exit 1; \
              fi && NSS_SDB_USE_CACHE=no curl -k -f https://0.0.0.0:8443/console/
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: webconsole
        ports:
        - containerPort: 8443
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/serving-cert
          name: serving-cert
        - mountPath: /var/webconsole-config
          name: webconsole-config
      dnsPolicy: ClusterFirst
      nodeSelector:
        node-role.kubernetes.io/master: "true"
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: webconsole
      serviceAccountName: webconsole
      terminationGracePeriodSeconds: 30
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 288
          secretName: webconsole-serving-cert
      - configMap:
          defaultMode: 288
          name: webconsole-config
        name: webconsole-config
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: 2020-06-11T14:21:53Z
    lastUpdateTime: 2020-06-11T14:21:53Z
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: 2020-06-11T14:21:53Z
    lastUpdateTime: 2020-06-11T14:23:18Z
    message: ReplicaSet "webconsole-7fc8759f7b" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
